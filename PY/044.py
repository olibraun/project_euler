#!/usr/bin/python

#Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten pentagonal numbers are:
#1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 - 22 = 48, is not pentagonal.
#Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and
# D = |Pk - Pj| is minimised; what is the value of D?

import math

P = [n*(3*n-1)/2 for n in range(1, 100000)]

def P(n):
  return n*(3*n-1)/2

def isPentagonal(x):
  totest = (math.sqrt(24*x+1) + 1)/6
  return totest.is_integer()

currentD = 10**30
done = False
n = 1

while not done:
  p = P(n)
  if p - P(n-1) > currentD:
    #We're done because of the growth behaviour of P(n)-P(n-1)
    done = True
  for i in range(n - 1, 0, -1):
    q = P(i)
    d = p - q
    s = p + q
    if d > currentD:
      break
    if isPentagonal(d) and isPentagonal(s):
      print "Found a candidate pair, " + str(p) + ', ' + str(q) + ' with difference ' + str(d)
      D = d # They're the same value...
      if D < currentD:
        currentD = D
  n += 1